{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/oleg/learn/Week10/Day5/quiz/quiz-native/src/components/QuizList.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { connect } from 'react-redux';\nimport { fetchQuizes as _fetchQuizes } from \"../store/actions/quiz\";\nimport QuizCard from \"./QuizCard\";\nimport { Loader } from \"../components/Loader\";\nimport { changeIconName } from \"./utils/changeIconName\";\n\nvar QuizList = function (_React$Component) {\n  _inherits(QuizList, _React$Component);\n\n  function QuizList() {\n    _classCallCheck(this, QuizList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuizList).apply(this, arguments));\n  }\n\n  _createClass(QuizList, [{\n    key: \"renderQuizes\",\n    value: function renderQuizes() {\n      var _this = this;\n\n      return React.createElement(FlatList, {\n        data: this.props.quizes,\n        contentContainerStyle: {\n          alignItems: 'center'\n        },\n        style: {\n          width: '100%'\n        },\n        numColumns: 3,\n        keyExtractor: function keyExtractor(quiz) {\n          return quiz.id.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(QuizCard, {\n            quiz: item,\n            icon: changeIconName(item.name),\n            onOpen: _this.props.onOpen,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchQuizes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.loading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }) : React.createElement(View, {\n        style: styles.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }, this.renderQuizes());\n    }\n  }]);\n\n  return QuizList;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    height: '100%',\n    width: '100%',\n    paddingVertical: 20,\n    alignItems: 'center'\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    quizes: state.quiz.quizes,\n    loading: state.quiz.loading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizes: function fetchQuizes() {\n      return dispatch(_fetchQuizes());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);","map":{"version":3,"sources":["/home/oleg/learn/Week10/Day5/quiz/quiz-native/src/components/QuizList.js"],"names":["React","connect","fetchQuizes","QuizCard","Loader","changeIconName","QuizList","props","quizes","alignItems","width","quiz","id","toString","item","name","onOpen","loading","styles","wrapper","renderQuizes","Component","StyleSheet","create","height","paddingVertical","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAW,IAAXA,YAAT;AACA,OAAOC,QAAP;AACA,SAASC,MAAT;AACA,SAASC,cAAT;;IAEMC,Q;;;;;;;;;;;mCACW;AAAA;;AACb,aAGE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,MADnB;AAEE,QAAA,qBAAqB,EAAE;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAFzB;AAGE,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAHT;AAIE,QAAA,UAAU,EAAE,CAJd;AAKE,QAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAV;AAAA,SALhB;AAME,QAAA,UAAU,EAAE;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,iBACV,oBAAC,QAAD;AACE,YAAA,IAAI,EAAEA,IADR;AAEE,YAAA,IAAI,EAAET,cAAc,CAACS,IAAI,CAACC,IAAN,CAFtB;AAGE,YAAA,MAAM,EAAE,KAAI,CAACR,KAAL,CAAWS,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,YADU;AAAA,SANd;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AAmBD;;;wCAEmB;AAClB,WAAKT,KAAL,CAAWL,WAAX;AACD;;;6BAEQ;AACP,aAAO,KAAKK,KAAL,CAAWU,OAAX,GACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GAGL,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKC,YAAL,EAA9B,CAHF;AAKD;;;;EAjCoBpB,KAAK,CAACqB,S;;AAoC7B,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,MAAM,EAAE,MADD;AAEPd,IAAAA,KAAK,EAAC,MAFC;AAGPe,IAAAA,eAAe,EAAE,EAHV;AAOPhB,IAAAA,UAAU,EAAE;AAPL;AADsB,CAAlB,CAAf;;AAYA,SAASiB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLnB,IAAAA,MAAM,EAAEmB,KAAK,CAAChB,IAAN,CAAWH,MADd;AAELS,IAAAA,OAAO,EAAEU,KAAK,CAAChB,IAAN,CAAWM;AAFf,GAAP;AAID;;AAED,SAASW,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL3B,IAAAA,WAAW,EAAE;AAAA,aAAM2B,QAAQ,CAAC3B,YAAW,EAAZ,CAAd;AAAA;AADR,GAAP;AAGD;;AAED,eAAeD,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, FlatList } from 'react-native';\nimport { connect } from 'react-redux';\nimport { fetchQuizes } from '../store/actions/quiz';\nimport QuizCard from './QuizCard';\nimport { Loader } from '../components/Loader';\nimport { changeIconName } from './utils/changeIconName';\n\nclass QuizList extends React.Component {\n  renderQuizes() {\n    return (\n      // (this.props.quizes.length > 0) ?\n      // return (\n      <FlatList\n        data={this.props.quizes}\n        contentContainerStyle={{alignItems:'center'}}\n        style={{width:'100%'}}\n        numColumns={3}\n        keyExtractor={(quiz) => quiz.id.toString()}\n        renderItem={({ item }) => (\n          <QuizCard\n            quiz={item}\n            icon={changeIconName(item.name)}\n            onOpen={this.props.onOpen}\n          />\n        )}\n      />\n    );\n    // ): null })\n  }\n\n  componentDidMount() {\n    this.props.fetchQuizes();\n  }\n\n  render() {\n    return this.props.loading ? (\n      <Loader />\n    ) : (\n      <View style={styles.wrapper}>{this.renderQuizes()}</View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    height: '100%',\n    width:'100%',\n    paddingVertical: 20,\n    // padding: 10,\n    // justifyContent:'space-between',\n    // alignContent:'space-between',\n    alignItems: 'center',\n  },\n});\n\nfunction mapStateToProps(state) {\n  return {\n    quizes: state.quiz.quizes,\n    loading: state.quiz.loading,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizes: () => dispatch(fetchQuizes()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);\n"]},"metadata":{},"sourceType":"module"}