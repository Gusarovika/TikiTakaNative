{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/oleg/learn/Week10/Day5/quiz/quiz-native/src/components/QuizCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { IMAGES } from \"./images\";\n\nvar QuizCard = function (_React$Component) {\n  _inherits(QuizCard, _React$Component);\n\n  function QuizCard() {\n    _classCallCheck(this, QuizCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuizCard).apply(this, arguments));\n  }\n\n  _createClass(QuizCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(TouchableOpacity, {\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return _this.props.onOpen(_this.props.quiz.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      }, React.createElement(View, {\n        style: styles.quiz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, React.createElement(View, {\n        style: styles.elevationLow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: IMAGES[this.props.icon],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      })), React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }, this.props.quiz.name))));\n    }\n  }]);\n\n  return QuizCard;\n}(React.Component);\n\nexport { QuizCard as default };\nvar styles = StyleSheet.create({\n  quiz: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginBottom: 15,\n    marginLeft: 15,\n    marginRight: 15\n  },\n  container: {\n    width: 100,\n    alignItems: 'center'\n  },\n  elevationLow: _objectSpread({}, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        height: 2\n      },\n      shadowOpacity: 0.3\n    },\n    android: {\n      elevation: 5\n    }\n  })),\n  image: {\n    width: 100,\n    height: 100\n  },\n  title: {\n    color: '#fff',\n    fontFamily: 'open-regular',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/home/oleg/learn/Week10/Day5/quiz/quiz-native/src/components/QuizCard.js"],"names":["React","IMAGES","QuizCard","props","onOpen","quiz","id","styles","container","elevationLow","image","icon","title","name","Component","StyleSheet","create","flexDirection","justifyContent","marginBottom","marginLeft","marginRight","width","alignItems","Platform","select","ios","shadowColor","shadowOffset","height","shadowOpacity","android","elevation","color","fontFamily","textAlign"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,MAAT;;IAEqBC,Q;;;;;;;;;;;6BAQV;AAAA;;AAEP,aACE,oBAAC,gBAAD;AACE,QAAA,aAAa,EAAE,GADjB;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,KAAL,CAAWC,MAAX,CAAkB,KAAI,CAACD,KAAL,CAAWE,IAAX,CAAgBC,EAAlC,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACF,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACG,KADhB;AAEE,QAAA,MAAM,EAAET,MAAM,CAAC,KAAKE,KAAL,CAAWQ,IAAZ,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKT,KAAL,CAAWE,IAAX,CAAgBQ,IAA5C,CARF,CADF,CAJF,CADF;AAmBD;;;;EA7BmCb,KAAK,CAACc,S;;SAAvBZ,Q;AAgCrB,IAAMK,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,aAAa,EAAE,QADX;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,YAAY,EAAE,EAHV;AAIJC,IAAAA,UAAU,EAAE,EAJR;AAKJC,IAAAA,WAAW,EAAE;AALT,GADyB;AAQ/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,KAAK,EAAE,GADE;AAETC,IAAAA,UAAU,EAAE;AAFH,GARoB;AAY/Bd,EAAAA,YAAY,oBACPe,QAAQ,CAACC,MAAT,CAAgB;AACjBC,IAAAA,GAAG,EAAE;AACHC,MAAAA,WAAW,EAAE,OADV;AAEHC,MAAAA,YAAY,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFX;AAGHC,MAAAA,aAAa,EAAE;AAHZ,KADY;AAMjBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE;AADJ;AANQ,GAAhB,CADO,CAZmB;AAwB/BtB,EAAAA,KAAK,EAAE;AACLY,IAAAA,KAAK,EAAE,GADF;AAELO,IAAAA,MAAM,EAAE;AAFH,GAxBwB;AA4B/BjB,EAAAA,KAAK,EAAE;AACLqB,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,UAAU,EAAE,cAFP;AAGLC,IAAAA,SAAS,EAAE;AAHN;AA5BwB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Image,\n  Text,\n  TouchableOpacity,\n  Platform,\n} from 'react-native';\nimport { IMAGES } from './images';\n\nexport default class QuizCard extends React.Component {\n  // state = {\n  //   quizId = ''\n  //  }\n \n  //  componentDidMount(){\n  //    this.setState(quizd)\n  //  }\n  render() {\n    // console.log(this.props.quiz.id)\n    return (\n      <TouchableOpacity\n        activeOpacity={0.7}\n        onPress={() => this.props.onOpen(this.props.quiz.id)}\n      >\n        <View style={styles.quiz}>\n          <View style={styles.container}>\n            <View style={styles.elevationLow}>\n              <Image\n                style={styles.image}\n                source={IMAGES[this.props.icon]}\n              ></Image>\n            </View>\n\n            <Text style={styles.title}>{this.props.quiz.name}</Text>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  quiz: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginBottom: 15,\n    marginLeft: 15,\n    marginRight: 15,\n  },\n  container: {\n    width: 100,\n    alignItems: 'center',\n  },\n  elevationLow: {\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { height: 2 },\n        shadowOpacity: 0.3,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n  image: {\n    width: 100,\n    height: 100,\n  },\n  title: {\n    color: '#fff',\n    fontFamily: 'open-regular',\n    textAlign: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}