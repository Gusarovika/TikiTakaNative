{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/home/oleg/learn/Week10/Day5/quiz/quiz-native/src/screens/AuthScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Button } from 'react-native-elements';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { AppHeaderIcon } from \"../components/AppHeaderIcon\";\nimport { LinearGradient } from 'expo-linear-gradient';\nexport var AuthScreen = function AuthScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return React.createElement(LinearGradient, {\n    colors: ['#de3c5e', '#7ebead'],\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    }\n  }, React.createElement(View, {\n    style: styles.elevationLow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../assets/icon.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"\\u041D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Email\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    }\n  }), React.createElement(View, {\n    style: styles.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    }\n  }, React.createElement(Button, {\n    type: \"solid\",\n    title: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n    raised: true,\n    buttonStyle: {\n      backgroundColor: 'white',\n      borderRadius: 25,\n      height: 50\n    },\n    titleStyle: {\n      color: 'rgba(0,0,0,0.7)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    }\n  }), React.createElement(Button, {\n    title: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n    color: \"rgb(176, 193, 71)\",\n    raised: true,\n    buttonStyle: {\n      backgroundColor: 'rgb(176, 193, 71)',\n      borderRadius: 25,\n      height: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  }))))));\n};\n\nAuthScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerTitle: 'Авторизация',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: AppHeaderIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      }\n    }, React.createElement(Item, {\n      title: \"Toggle Drawer\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        return navigation.toggleDrawer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 55,\n    margin: 10,\n    padding: 8,\n    color: 'white',\n    borderRadius: 14,\n    fontSize: 18,\n    fontFamily: 'open-regular',\n    borderBottomColor: 'rgba(255,255,255,0.3)',\n    borderBottomWidth: 1\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'space-evenly',\n    alignItems: 'center'\n  },\n  elevationLow: _objectSpread({}, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        height: 2\n      },\n      shadowOpacity: 0.3\n    },\n    android: {\n      elevation: 5\n    }\n  })),\n  logo: {\n    width: 150,\n    height: 150\n  },\n  buttons: {\n    marginVertical: 20,\n    height: 120,\n    justifyContent: 'space-between',\n    alignContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/oleg/learn/Week10/Day5/quiz/quiz-native/src/screens/AuthScreen.js"],"names":["React","Button","HeaderButtons","Item","AppHeaderIcon","LinearGradient","AuthScreen","flex","Keyboard","dismiss","styles","container","elevationLow","logo","require","input","buttons","backgroundColor","borderRadius","height","color","navigationOptions","navigation","headerTitle","headerLeft","toggleDrawer","StyleSheet","create","width","margin","padding","fontSize","fontFamily","borderBottomColor","borderBottomWidth","justifyContent","alignItems","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","android","elevation","marginVertical","alignContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  TextInput,\n  StyleSheet,\n  Image,\n  Platform,\n  TouchableWithoutFeedback,\n  Keyboard,\n} from 'react-native';\nimport { Button } from 'react-native-elements';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { AppHeaderIcon } from '../components/AppHeaderIcon';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nexport const AuthScreen = ({}) => {\n  return (\n    <LinearGradient colors={['#de3c5e', '#7ebead']} style={{ flex: 1 }}>\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n        <View style={styles.container}>\n          <View style={styles.elevationLow}>\n            <Image\n              style={styles.logo}\n              source={require('../../assets/icon.png')}\n            ></Image>\n          </View>\n          <View>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Никнейм\"\n              autoCapitalize=\"none\"\n              placeholderTextColor=\"white\"\n              // onChangeText={(val) => this.onChangeText('username', val)}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Email\"\n              autoCapitalize=\"none\"\n              placeholderTextColor=\"white\"\n              // onChangeText={(val) => this.onChangeText('email', val)}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Пароль\"\n              secureTextEntry={true}\n              autoCapitalize=\"none\"\n              placeholderTextColor=\"white\"\n              // onChangeText={(val) => this.onChangeText('password', val)}\n            />\n            <View style={styles.buttons}>\n              <Button\n                type=\"solid\"\n                title=\"Войти\"\n                raised\n                buttonStyle={{\n                  backgroundColor: 'white',\n                  borderRadius: 25,\n                  height: 50,\n                }}\n                titleStyle={{ color: 'rgba(0,0,0,0.7)' }}\n                // onPress={this.signUp}\n              />\n              <Button\n                title=\"Регистрация\"\n                color=\"rgb(176, 193, 71)\"\n                raised\n                buttonStyle={{\n                  backgroundColor: 'rgb(176, 193, 71)',\n                  borderRadius: 25,\n                  height: 50,\n                }}\n                // onPress={this.signUp}\n              />\n            </View>\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    </LinearGradient>\n  );\n};\n\nAuthScreen.navigationOptions = ({ navigation }) => ({\n  headerTitle: 'Авторизация',\n  headerLeft: (\n    <HeaderButtons HeaderButtonComponent={AppHeaderIcon}>\n      <Item\n        title=\"Toggle Drawer\"\n        iconName=\"ios-menu\"\n        onPress={() => navigation.toggleDrawer()}\n      />\n    </HeaderButtons>\n  ),\n});\n\nconst styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 55,\n    margin: 10,\n    padding: 8,\n    color: 'white',\n    borderRadius: 14,\n    fontSize: 18,\n    fontFamily: 'open-regular',\n    borderBottomColor: 'rgba(255,255,255,0.3)',\n    borderBottomWidth: 1,\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n  },\n  elevationLow: {\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { height: 2 },\n        shadowOpacity: 0.3,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n  logo: {\n    width: 150,\n    height: 150,\n  },\n  buttons: {\n    marginVertical: 20,\n    height: 120,\n    justifyContent: 'space-between',\n    alignContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}