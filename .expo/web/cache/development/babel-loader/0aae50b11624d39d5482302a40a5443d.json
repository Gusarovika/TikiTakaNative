{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/oleg/learn/Week10/Day5/quiz/quiz-native/src/screens/QuizScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { AppHeaderIcon } from \"../components/AppHeaderIcon\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { ActiveQuiz } from \"../components/ActiveQuiz/ActiveQuiz\";\nimport { FinishedQuizScreen } from \"../screens/FinishedQuizScreen\";\nimport { Loader } from \"../components/Loader\";\nimport { connect } from 'react-redux';\nimport { fetchQuizById as _fetchQuizById, quizAnswerClick as _quizAnswerClick, retryQuiz as _retryQuiz } from \"../store/actions/quiz\";\n\nvar QuizScreen = function (_React$Component) {\n  _inherits(QuizScreen, _React$Component);\n\n  function QuizScreen() {\n    _classCallCheck(this, QuizScreen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuizScreen).apply(this, arguments));\n  }\n\n  _createClass(QuizScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var quizId = this.props.navigation.dangerouslyGetParent().getParam('quizId');\n      this.props.fetchQuizById(quizId);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.retryQuiz();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LinearGradient, {\n        colors: ['#de3c5e', '#7ebead'],\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }, React.createElement(View, {\n        style: styles.Quiz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }, React.createElement(View, {\n        style: styles.QuizWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }, this.props.loading || !this.props.quiz ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      }) : this.props.isFinished ? React.createElement(FinishedQuizScreen, {\n        results: this.props.results,\n        quiz: this.props.quiz,\n        onRetry: this.props.retryQuiz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }) : React.createElement(ActiveQuiz, {\n        answers: this.props.quiz[this.props.activeQuestion].answers,\n        question: this.props.quiz[this.props.activeQuestion].question,\n        ImgLink: this.props.quiz[this.props.activeQuestion].ImgLink,\n        topic: this.props.quiz[this.props.activeQuestion].topic,\n        onAnswerClick: this.props.quizAnswerClick,\n        quizLength: this.props.quiz.length,\n        answerNumber: this.props.activeQuestion + 1,\n        state: this.props.answerState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }))));\n    }\n  }]);\n\n  return QuizScreen;\n}(React.Component);\n\nQuizScreen.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: AppHeaderIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      }\n    }, React.createElement(Item, {\n      title: \"Toggle Drawer\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        return navigation.toggleDrawer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  Quiz: {\n    flex: 1,\n    justifyContent: 'center',\n    width: '100%'\n  },\n  QuizWrapper: {\n    width: '100%'\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    activeQuestion: state.quiz.activeQuestion,\n    answerState: state.quiz.answerState,\n    quiz: state.quiz.quiz,\n    loading: state.quiz.loading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizById: function fetchQuizById(id) {\n      return dispatch(_fetchQuizById(id));\n    },\n    quizAnswerClick: function quizAnswerClick(answerId) {\n      return dispatch(_quizAnswerClick(answerId));\n    },\n    retryQuiz: function retryQuiz() {\n      return dispatch(_retryQuiz());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizScreen);","map":{"version":3,"sources":["/home/oleg/learn/Week10/Day5/quiz/quiz-native/src/screens/QuizScreen.js"],"names":["React","HeaderButtons","Item","AppHeaderIcon","LinearGradient","ActiveQuiz","FinishedQuizScreen","Loader","connect","fetchQuizById","quizAnswerClick","retryQuiz","QuizScreen","quizId","props","navigation","dangerouslyGetParent","getParam","flex","styles","Quiz","QuizWrapper","loading","quiz","isFinished","results","activeQuestion","answers","question","ImgLink","topic","length","answerState","Component","navigationOptions","headerLeft","toggleDrawer","StyleSheet","create","justifyContent","width","mapStateToProps","state","mapDispatchToProps","dispatch","id","answerId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, ImageBackground } from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { AppHeaderIcon } from '../components/AppHeaderIcon';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { ActiveQuiz } from '../components/ActiveQuiz/ActiveQuiz';\nimport { FinishedQuizScreen } from '../screens/FinishedQuizScreen';\nimport { Loader } from '../components/Loader';\nimport { connect } from 'react-redux';\nimport {\n  fetchQuizById,\n  quizAnswerClick,\n  retryQuiz,\n} from '../store/actions/quiz';\n\nclass QuizScreen extends React.Component {\n  componentDidMount() {  \n    const quizId = this.props.navigation.dangerouslyGetParent().getParam('quizId')\n    this.props.fetchQuizById(quizId);\n\n  }\n\n  componentWillUnmount() {\n    this.props.retryQuiz();\n  }\n\n  render() {\n    return (\n      <LinearGradient colors={['#de3c5e', '#7ebead']} style={{ flex: 1 }}>\n        <View style={styles.Quiz}>\n          <View style={styles.QuizWrapper}>\n            {this.props.loading || !this.props.quiz ? (\n              <Loader />\n            ) : this.props.isFinished ? (\n              <FinishedQuizScreen\n                results={this.props.results}\n                quiz={this.props.quiz}\n                onRetry={this.props.retryQuiz}\n              />\n            ) : (\n              <ActiveQuiz\n                answers={this.props.quiz[this.props.activeQuestion].answers}\n                question={this.props.quiz[this.props.activeQuestion].question}\n                ImgLink={this.props.quiz[this.props.activeQuestion].ImgLink}\n                topic={this.props.quiz[this.props.activeQuestion].topic}\n                onAnswerClick={this.props.quizAnswerClick}\n                quizLength={this.props.quiz.length}\n                answerNumber={this.props.activeQuestion + 1}\n                state={this.props.answerState}\n              />\n            )}\n          </View>\n        </View>\n      </LinearGradient>\n    );\n  }\n}\n\nQuizScreen.navigationOptions = ({ navigation }) => ({\n\n  headerLeft: (\n    <HeaderButtons HeaderButtonComponent={AppHeaderIcon}>\n      <Item\n        title=\"Toggle Drawer\"\n        iconName=\"ios-menu\"\n        onPress={() => navigation.toggleDrawer()}\n      />\n    </HeaderButtons>\n  ),\n});\n\nconst styles = StyleSheet.create({\n  Quiz: {\n    flex: 1,\n    justifyContent: 'center',\n    width: '100%',\n  },\n  QuizWrapper: {\n    width: '100%',\n  },\n});\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    activeQuestion: state.quiz.activeQuestion,\n    answerState: state.quiz.answerState,\n    quiz: state.quiz.quiz,\n    loading: state.quiz.loading,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizById: (id) => dispatch(fetchQuizById(id)),\n    quizAnswerClick: (answerId) => dispatch(quizAnswerClick(answerId)),\n    retryQuiz: () => dispatch(retryQuiz()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizScreen);\n"]},"metadata":{},"sourceType":"module"}