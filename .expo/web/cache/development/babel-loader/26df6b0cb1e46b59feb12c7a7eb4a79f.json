{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/oleg/learn/Week10/Day5/quiz/quiz-native/App.js\";\nimport React, { useState } from 'react';\nimport { AppLoading } from 'expo';\nimport { AppNavigation } from \"./src/navigation/AppNavigation\";\nimport { bootstrap } from \"./src/bootstrap\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./src/store/reducers/rootReducer\";\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  if (!isReady) {\n    return React.createElement(AppLoading, {\n      startAsync: bootstrap,\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      onError: function onError(err) {\n        return console.log(err);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    }\n  }, React.createElement(AppNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    }\n  }));\n}","map":{"version":3,"sources":["/home/oleg/learn/Week10/Day5/quiz/quiz-native/App.js"],"names":["React","useState","AppLoading","AppNavigation","bootstrap","createStore","applyMiddleware","Provider","thunk","rootReducer","store","App","isReady","setIsReady","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,aAAT;AACA,SAASC,SAAT;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP;AAEA,IAAMC,KAAK,GAAGL,WAAW,CAACI,WAAD,EAAcH,eAAe,CAACE,KAAD,CAA7B,CAAzB;AAEA,eAAe,SAASG,GAAT,GAAe;AAAA,kBACEV,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MACrBW,OADqB;AAAA,MACZC,UADY;;AAG5B,MAAI,CAACD,OAAL,EAAc;AACZ,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAER,SADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMS,UAAU,CAAC,IAAD,CAAhB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAE,iBAACC,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState } from 'react';\nimport { AppLoading } from 'expo';\nimport { AppNavigation } from './src/navigation/AppNavigation';\nimport { bootstrap } from './src/bootstrap';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './src/store/reducers/rootReducer';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n\n  if (!isReady) {\n    return (\n      <AppLoading\n        startAsync={bootstrap}\n        onFinish={() => setIsReady(true)}\n        onError={(err) => console.log(err)}\n      />\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <AppNavigation />\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}